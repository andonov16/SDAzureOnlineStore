@page "/customerorders/{CustomerId:int}"
@using OnlineStore.Server.Data.Repositories
@using OnlineStore.Server.Model
@inject OrdersRepository orderRepo
@inject NavigationManager NavigationManager

<div>
    <h3>Customer Orders</h3>

    @if (IsLoading)
    {
        <p>Loading...</p>
    }
    else if (Orders == null || !Orders.Any())
    {
        <p>No orders available for this customer.</p>
    }
    else
    {
        <table class="table">
            <thead>
                <tr>
                    <th>Order Number</th>
                    <th>Order Date</th>
                    <th>Total Amount</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var order in Orders)
                {
                    <tr>
                        <td>@order.OrderNumber</td>
                        <td>@order.OrderDate.ToString("yyyy-MM-dd")</td>
                        <td>@order.TotalAmount.ToString("C")</td>
                    </tr>
                    @if (ExpandedOrderId == order.Id)
                    {
                        <tr>
                            <td colspan="4">
                                <h5>Order Items</h5>
                                <table class="table">
                                    <thead>
                                        <tr>
                                            <th>Product ID</th>
                                            <th>Product Name</th>
                                            <th>Quantity</th>
                                            <th>Unit Price</th>
                                            <th>Total Price</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var item in order.OrderItems)
                                        {
                                            <tr>
                                                <td>@item.ProductId</td>
                                                <td>@item.Product?.Name</td>
                                                <td>@item.Quantity</td>
                                                <td>@item.UnitPrice.ToString("C")</td>
                                                <td>@(item.Quantity * item.UnitPrice).ToString("C")</td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </td>
                        </tr>
                    }
                }
            </tbody>
        </table>
    }
</div>

@code {
    [Parameter]
    public int CustomerId { get; set; }

    private ICollection<Order> Orders { get; set; }
    private bool IsLoading { get; set; } = true;
    private int? ExpandedOrderId { get; set; } = null;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            Orders = await orderRepo.FindFullAsync(o => o.CustomerId == CustomerId);
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error fetching orders: {ex.Message}");
        }
        finally
        {
            IsLoading = false;
        }
    }

    private void ToggleOrderDetails(int orderId)
    {
        if (ExpandedOrderId == orderId)
        {
            ExpandedOrderId = null;
        }
        else
        {
            ExpandedOrderId = orderId;
        }
    }
}
